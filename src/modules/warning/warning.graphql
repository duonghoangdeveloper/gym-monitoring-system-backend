type Warning{
  _id: ID!
  customer: User
  supporter: User

  # Warning info
  image: String!
  content: String!
  note: String
  status: Status!
  
  # Timestamp
  createdAt: String!
  updatedAt: String!
}

type Query {
  warning(_id: ID!): Warning!
  warnings(query: WarningsQueryInput): Warnings!
}

type Mutation {
  createWarning(data: CreateWarningInput!): Warning!
  deleteWarning(_id: ID!): Warning!
  acceptWarning(_id: ID!, data: UpdateWarningInput): Warning!
}

type Warnings {
  data: [Warning!]!
  total: Int!
}

input WarningsQueryInput {
  skip: Int
  limit: Int
  sort: String
  search: WarningsSearchInput
}

input WarningsSearchInput {
  content: String
}

input CreateWarningInput {
  customerId: ID
  content: String
  image: String!
}

input UpdateWarningInput {  
  customerId: ID
  content: String
  note: String
  supporterId: ID!
}

enum Status {  
  PENDING
  FAILED
  SUCCESSED
}
